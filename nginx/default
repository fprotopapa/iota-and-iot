##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
# Edited by Fabbio Protopapa (2021)
# Example nginx configuration to run as reverse proxy for hornet node
# Update <..>-fields with your parameters, entries with '# managed by Certbot'-tag 
# are automatically updated by certbot
# 
# Full path name at /etc/nginx/sites-available/default
#

# Default server configuration
#
server {
    if ($host = <your_url>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


       listen 80  default_server;
       listen [::]:80 default_server;

       server_name <your_url>;
       return 301 https://example.com$request_uri;
}

server {
       listen 15600 default_server;
       listen [::]:15600 default_server;
       server_name <your_url>;

       location / {
               proxy_pass http://localhost:15600;
       }
}

server {
       listen <REST_Port> ssl http2 default_server;
       listen [::]:<REST_Port> ssl http2 default_server;
       server_name <your_url>;
       error_page 497  https://$host:$server_port$request_uri;
       ssl_certificate <path_to_pem>; # managed by Certbot
       ssl_certificate_key <path_to_pem>; # managed by Certbot
       location / {

               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection "upgrade";
               proxy_pass http://localhost:14265;
       }

}

server {
        # SSL configuration

        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        root /var/www/html;

        server_name <your_url>;
        error_page 497  https://$host:$server_port$request_uri;

        location / {

                proxy_pass  https://example.com$request_uri;
        }


    ssl_certificate <path_to_pem>; # managed by Certbot
    ssl_certificate_key <path_to_pem>; # managed by Certbot
}
